{"version":3,"sources":["types/GameState.ts","components/Socket.ts","components/Home.tsx","components/Error.tsx","assets/wavelength.gif","components/NotStarted.tsx","assets/target.svg","components/EndSlider.tsx","utils/toTitleCase.ts","components/PolarCards.tsx","components/EndPlayArea.tsx","components/Target.tsx","components/PsychicPlayArea.tsx","components/Slider.tsx","components/GuesserPlayArea.tsx","components/StealerPlayArea.tsx","components/Room.tsx","components/WinScreen.tsx","components/RoomHandler.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GameState","socket","io","transports","Home","props","onClick","console","log","emit","Error","buttonStyle","width","NotStarted","useHistory","roomName","data","useState","value","setValue","renderNames","names","style","listStyleType","padding","map","name","fontWeight","color","backgroundImage","bg","backgroundSize","backgroundPosition","minHeight","marginTop","paddingTop","textAlign","display","flexDirection","justifyContent","margin","flex","alignItems","disabled","currTeam","backgroundColor","handleTeamChange","leftTeam","placeItems","rightTeam","type","min","max","onChange","e","target","valueAsNumber","marginBottom","htmlFor","Number","isNaN","start","EndSlider","overflow","position","WebkitAppearance","height","background","borderRadius","outline","opacity","transition","backgroundRepeat","transform","goal","border","className","step","bottom","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","PolarCards","wordContainerStyle","fontFamily","wordStyle","minWidth","boxShadow","leftWord","fontSize","borderLeft","rightWord","EndPlayArea","setBg","showNext","setShowNext","setDisabled","useEffect","on","setTimeout","currPsychic","Target","zIndex","PsychicPlayArea","Slider","handleChange","preventDefault","role","steal","parseFloat","_","debounce","GuesserPlayArea","StealerPlayArea","handleSteal","direction","marginRight","marginLeft","scoreStyle","Room","leftScore","rightScore","guessing","leftTurn","end","isPsychic","ScreenBase","winner","RoomHandler","renderVal","gameState","setGameState","setLeftWord","setRightWord","setLeftTeam","setRightTeam","setIsPsychic","setCurrPsychic","setLeftTurn","setCurrTeam","setGoal","setName","setOpacity","notJoined","setNotJoined","userList","setUserList","setLeftScore","setRightScore","setSteal","setEnd","setWinner","match","params","room","submit","team","setData","setAllData","left","right","state","roomProps","WinScreen","maxScore","borderBottom","placeholder","onSubmit","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7f63a7e.chunk.js","sourcesContent":["enum GameState {\n  \"NOT_STARTED\" = 0, //choose teams, people are joining, naming themselves, etc.\n  \"TEAM1_GUESS\" = 1, //somebody presses the start button, first psychic gives word. team 1 is given a button that says submit\n  \"TEAM1_STEAL\" = 2, //team 1 pressed submit, team 2 gets left or right buttons\n  \"TEAM1_END\" = 3, //team 2 pressed left. Show the lobby where the target was. Grant points to teams\n  \"TEAM2_GUESS\" = 4, //team 2 psychic gets to go. team 2 is shown submit button and can guess\n  \"TEAM2_STEAL\" = 5, //team 2 has guessed, team 1 gets left/right buttons\n  \"TEAM2_END\" = 6, //team 1 has pressed left/right. Show lobby the target. Go to team1guess\n  \"GAME_OVER\" = 7, //a team has scored enough to win. Show all targets and guesses? on submit -> go to not started\n}\n\nexport default GameState;\n","import io from \"socket.io-client\";\n\nlet socket = io(\"http://localhost:4000\", { transports: [\"websocket\"] });\n\nexport default socket;\n","import React from \"react\";\nimport socket from \"./Socket\";\ntype HomeProps = {};\n\nconst Home = (props: HomeProps) => {\n  return (\n    <div>\n      <button\n        onClick={() => {\n          console.log(\"hi\");\n          socket.emit(\"message\", \"hi\");\n        }}\n      >\n        Hello\n      </button>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\ntype ErrorProps = {};\n\nconst Error = (props: ErrorProps) => {\n  return <div>Error! Something went wrong!</div>;\n};\n\nexport default Error;\n","export default __webpack_public_path__ + \"static/media/wavelength.f97aa54d.gif\";","import React, { CSSProperties, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RoomData from \"../types/RoomData\";\nimport socket from \"./Socket\";\nimport bg from \"../assets/wavelength.gif\";\ntype NotStartedProps = {\n  roomName: string;\n  name?: string;\n  data: RoomData;\n  currTeam: \"left\" | \"right\";\n  handleTeamChange?: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  start: (value: number) => void;\n};\n\nconst Modals = {\n  NAME: \"name\",\n  NONE: \"\",\n};\nconst buttonStyle: CSSProperties = {\n  width: \"75%\",\n};\n\nconst NotStarted = (props: NotStartedProps) => {\n  const history = useHistory();\n  const roomName = props.roomName;\n  const data = props.data;\n  let [value, setValue] = useState(10);\n\n  const renderNames = (names: string[]) => {\n    return (\n      <ul style={{ listStyleType: \"none\", padding: 0 }}>\n        {names.map((name) => (\n          <li style={{ fontWeight: \"bold\", color: \"white\" }}>{name}</li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${bg})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        minHeight: \"100vh\",\n      }}\n    >\n      {/* <button>Start the Game</button> */}\n      <h1\n        style={{\n          marginTop: 0,\n          paddingTop: 20,\n          textAlign: \"center\",\n          color: \"#000\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        WAVELENGTH\n      </h1>\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"20px\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"1 1 40%\",\n            textAlign: \"center\",\n            flexDirection: \"column\",\n            // justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <button\n            disabled={props.currTeam !== \"right\"}\n            style={{ ...buttonStyle, backgroundColor: \"#FFA97E\" }}\n            onClick={props.handleTeamChange}\n          >\n            Join\n          </button>\n          <h2 style={{ color: \"#FFA97E\" }}>Team 1</h2>\n          {renderNames(data.leftTeam)}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            placeItems: \"center\",\n            justifyContent: \"center\",\n            flex: \"0 1 10%\",\n          }}\n        >\n          <h1\n            style={{\n              textAlign: \"center\",\n            }}\n          >\n            VS\n          </h1>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"1 1 40%\",\n            textAlign: \"center\",\n            flexDirection: \"column\",\n            // justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <button\n            disabled={props.currTeam !== \"left\"}\n            style={{ ...buttonStyle, backgroundColor: \"#7ED6FF\" }}\n            onClick={props.handleTeamChange}\n          >\n            Join\n          </button>\n          <h2 style={{ color: \"#7ED6FF\" }}>Team 2</h2>\n          {renderNames(data.rightTeam)}\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flex: \"1 1 300px\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <input\n          name=\"maxscore\"\n          type=\"number\"\n          min=\"1\"\n          max=\"40\"\n          value={value}\n          onChange={(e) => setValue(e.target.valueAsNumber)}\n          style={{\n            margin: 20,\n            marginBottom: 5,\n          }}\n        />\n        <label htmlFor=\"name\" style={{ color: \"white\", marginBottom: \"10px\" }}>\n          First Team to {Number.isNaN(value) ? 10 : value >= 40 ? 40 : value}{\" \"}\n          wins\n        </label>\n\n        <button\n          onClick={() => props.start(value)}\n          style={{\n            backgroundColor: \"#7effa9\",\n          }}\n        >\n          start\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotStarted;\n","export default __webpack_public_path__ + \"static/media/target.619f13dd.svg\";","import React from \"react\";\nimport target from \"../assets/target.svg\";\nimport \"../styles/Spinner.css\";\ntype TargetProps = { goal: number; value: number; bg: number };\n\nconst EndSlider = (props: TargetProps) => {\n  return (\n    <div\n      style={{\n        overflow: \"hidden\",\n        position: \"relative\",\n        WebkitAppearance: \"none\",\n        width: \"calc(100% - 10px)\",\n        height: \"152px\",\n        background: \"#f5f6fa\",\n        borderRadius: \"5px\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n        outline: \"none\",\n      }}\n    >\n      <div\n        style={{\n          backgroundImage: `url(${target})`,\n          opacity: props.bg,\n          transition: \"opacity 1s\",\n          height: \"100%\",\n          backgroundSize: \"100%\",\n          backgroundRepeat: \"repeat-y\",\n          transform: `translateX(${props.goal - 50}vw)`,\n          border: \"none\",\n        }}\n      ></div>\n      <input\n        className=\"slider\"\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step={0.00001}\n        value={props.value}\n        style={{\n          position: \"absolute\",\n          bottom: 0,\n          border: \"1px solid black\",\n          margin: 0,\n          backgroundColor: \"rgba(255,255,255,0)\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default EndSlider;\n","export default function toTitleCase(str: string) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n","import React, { CSSProperties } from \"react\";\nimport toTitleCase from \"../utils/toTitleCase\";\ntype PolarCardsProps = {\n  leftWord: string;\n  rightWord: string;\n};\n\nconst PolarCards = (props: PolarCardsProps) => {\n  const wordContainerStyle: CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: \"1 1 50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontFamily: \"Catamaran\",\n  };\n  const wordStyle: CSSProperties = {\n    textAlign: \"center\",\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        minWidth: \"300px\",\n        minHeight: \"200px\",\n        width: \"60%\",\n        margin: \"20px\",\n        // border: \"1px solid black\",\n        borderRadius: \"5px\",\n        boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n        color: \"#fff\",\n      }}\n    >\n      <div\n        style={{\n          ...wordContainerStyle,\n          backgroundColor: \"#7ed6ff\",\n          borderRadius: \"5px 0px 0px 5px\",\n        }}\n      >\n        <h2 style={wordStyle}>{toTitleCase(props.leftWord)}</h2>\n        <h3 style={{ fontSize: \"3em\", margin: 0 }}>←</h3>\n      </div>\n\n      <div\n        style={{\n          ...wordContainerStyle,\n          backgroundColor: \"#ffa97e\",\n          borderLeft: \"1px solid black\",\n          borderRadius: \"0px 5px 5px 0px\",\n        }}\n      >\n        <h2 style={wordStyle}>{toTitleCase(props.rightWord)}</h2>\n        <h3 style={{ fontSize: \"3em\", margin: 0 }}>→</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default PolarCards;\n","import React, { useEffect, useState } from \"react\";\nimport GameProps from \"../types/GameProps\";\nimport EndSlider from \"./EndSlider\";\nimport PolarCards from \"./PolarCards\";\nimport socket from \"./Socket\";\n\nconst EndPlayArea = (props: GameProps) => {\n  const { goal, leftWord, rightWord, value } = props;\n  let [bg, setBg] = useState(0);\n  let [showNext, setShowNext] = useState(false);\n  let [disabled, setDisabled] = useState(true);\n\n  useEffect(() => {\n    socket.on(\"showingtarget\", () => {\n      setBg(1);\n      setShowNext(true);\n      setTimeout(() => {\n        setDisabled(false);\n      }, 1200);\n    });\n  }, []);\n\n  const handleContinue = () => {\n    console.log(\"continue\");\n    socket.emit(\"continue\", props.roomName);\n  };\n  const handleShow = () => {\n    socket.emit(\"show\", props.roomName);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <h2 style={{ margin: 0 }}>{props.currPsychic} is up!</h2>\n      <PolarCards leftWord={leftWord} rightWord={rightWord} />\n      <EndSlider value={value} goal={goal} bg={bg} />\n      {showNext ? (\n        <button\n          style={{ backgroundColor: \"#7effa9\", color: \"#000\", width: \"40%\" }}\n          onClick={() => handleContinue()}\n          disabled={disabled}\n        >\n          Continue\n        </button>\n      ) : (\n        <button\n          style={{ backgroundColor: \"#7effa9\", color: \"#000\", width: \"40%\" }}\n          onClick={() => handleShow()}\n        >\n          Show\n        </button>\n      )}\n      {showNext && disabled && <div className=\"lds-dual-ring\" />}\n    </div>\n  );\n};\n\nexport default EndPlayArea;\n","import React from \"react\";\nimport target from \"../assets/target.svg\";\ntype TargetProps = { goal: number; value: number };\n\nconst Target = (props: TargetProps) => {\n  return (\n    <div\n      // className=\"slider\"\n      style={{\n        overflow: \"hidden\",\n        position: \"relative\",\n        WebkitAppearance: \"none\",\n        width: \"calc(100% - 10px)\",\n        height: \"154px\",\n        background: \"#f5f6fa\",\n        borderRadius: \"5px\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n        // border: \"1px solid grey\",\n        // boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n        outline: \"none\",\n      }}\n    >\n      <div\n        style={{\n          backgroundImage: `url(${target})`,\n          height: \"100%\",\n          backgroundSize: \"100%\",\n          backgroundRepeat: \"repeat-y\",\n          transform: `translateX(${props.goal - 50}vw)`,\n          border: \"none\",\n        }}\n      ></div>\n      <input\n        className=\"slider\"\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step={0.00001}\n        value={props.value}\n        style={{\n          zIndex: 99999,\n          position: \"absolute\",\n          bottom: 0,\n          backgroundColor: \"rgba(255,255,255,0)\",\n        }}\n      />\n      {/* <div\n        style={{\n          width: \"5px\",\n          borderRadius: \"3px\",\n          height: \"100%\",\n          backgroundColor: \"red\",\n          // backgroundRepeat: \"repeat-y\",\n          transform: `translateX(${props.value - 27}vw)`,\n          zIndex: 999999,\n          position: \"absolute\",\n          bottom: 0,\n        }}\n      ></div> */}\n    </div>\n  );\n};\n\nexport default Target;\n","import React, { useEffect, useState } from \"react\";\nimport GameProps from \"../types/GameProps\";\nimport PolarCards from \"./PolarCards\";\nimport Target from \"./Target\";\n\nconst PsychicPlayArea = (props: GameProps) => {\n  const { goal, leftWord, rightWord, value } = props;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <h2 style={{ margin: 0 }}>{props.currPsychic} is up!</h2>\n      <PolarCards leftWord={leftWord} rightWord={rightWord} />\n      <p style={{ margin: 0 }}>\n        You're the <strong>PSYCHIC</strong>\n      </p>\n      <Target goal={goal} value={value} />\n    </div>\n  );\n};\n\nexport default PsychicPlayArea;\n","import React, { useEffect, useState } from \"react\";\nimport \"../styles/Slider.css\";\nimport target from \"../assets/target.svg\";\nimport socket from \"./Socket\";\nimport _ from \"lodash\";\ntype SliderProps = {\n  role: \"stealer\" | \"guesser\";\n  roomName: string;\n  value: number;\n  steal: boolean;\n};\n\nconst Slider = (props: SliderProps) => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    if (props.role === \"stealer\" || props.steal) return;\n    if (props.role === \"guesser\") {\n      socket.emit(\n        \"changevalue\",\n        props.roomName,\n        Number.parseFloat(e.target.value)\n      );\n    }\n    console.log(\"change\");\n  };\n\n  const [throttledCall] = useState(() =>\n    _.debounce((e) => handleChange(e), 10)\n  );\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        margin: \"20px\",\n      }}\n    >\n      <input\n        className=\"slider\"\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step={0.00001}\n        value={props.value}\n        onChange={(e) => handleChange(e)}\n      />\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useEffect, useState } from \"react\";\nimport GameProps from \"../types/GameProps\";\nimport PolarCards from \"./PolarCards\";\nimport Slider from \"./Slider\";\nimport socket from \"./Socket\";\n\nconst GuesserPlayArea = (props: GameProps) => {\n  const { goal, leftWord, rightWord, value } = props;\n\n  const handleGuess = () => {\n    socket.emit(\"guess\", props.roomName, value);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <h2 style={{ margin: 0 }}>{props.currPsychic} is up!</h2>\n      <PolarCards leftWord={leftWord} rightWord={rightWord} />\n      <p style={{ margin: 0 }}>\n        It's your team's turn to <strong>GUESS</strong>\n      </p>\n      <Slider\n        roomName={props.roomName}\n        role=\"guesser\"\n        value={value}\n        steal={props.steal}\n      />\n      <button\n        style={{ backgroundColor: \"#7effa9\", color: \"#000\", width: \"40%\" }}\n        disabled={props.steal}\n        onClick={handleGuess}\n      >\n        Guess\n      </button>\n    </div>\n  );\n};\n\nexport default GuesserPlayArea;\n","import React, { useEffect, useState } from \"react\";\nimport GameProps from \"../types/GameProps\";\nimport PolarCards from \"./PolarCards\";\nimport Slider from \"./Slider\";\nimport socket from \"./Socket\";\n\nconst StealerPlayArea = (props: GameProps) => {\n  const { goal, leftWord, rightWord, value } = props;\n\n  const handleSteal = (direction: \"left\" | \"right\") => {\n    socket.emit(\"steal\", props.roomName, direction, value);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <h2 style={{ margin: 0 }}>{props.currPsychic} is up!</h2>\n      <PolarCards leftWord={leftWord} rightWord={rightWord} />\n      <p style={{ margin: 0 }}>\n        It's your team's turn to <strong>STEAL</strong>\n      </p>\n      <Slider\n        steal={props.steal}\n        value={value}\n        roomName={props.roomName}\n        role=\"stealer\"\n      />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-evenly\",\n        }}\n      >\n        <button\n          style={{\n            backgroundColor: \"#7ED6FF\",\n            color: \"#fff\",\n            width: \"auto\",\n            marginRight: \"5px\",\n          }}\n          disabled={!props.steal}\n          onClick={() => handleSteal(\"left\")}\n        >\n          Left\n        </button>\n        <button\n          style={{\n            backgroundColor: \"#FFA97E\",\n            color: \"#fff\",\n            width: \"auto\",\n            marginLeft: \"5px\",\n          }}\n          disabled={!props.steal}\n          onClick={() => handleSteal(\"right\")}\n        >\n          Right\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default StealerPlayArea;\n","import React, { CSSProperties, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RoomData from \"../types/RoomData\";\nimport toTitleCase from \"../utils/toTitleCase\";\nimport EndPlayArea from \"./EndPlayArea\";\nimport PolarCards from \"./PolarCards\";\nimport socket from \"./Socket\";\nimport \"../styles/Modals.css\";\nimport GameProps from \"../types/GameProps\";\nimport PsychicPlayArea from \"./PsychicPlayArea\";\nimport GuesserPlayArea from \"./GuesserPlayArea\";\nimport StealerPlayArea from \"./StealerPlayArea\";\nimport wavelength from \"../assets/wavelength.jpg\";\nimport wavegif from \"../assets/wavelength.gif\";\n\n// type RoomProps = {\n//   roomName: string;\n//   data: RoomData;\n//   currTeam: \"left\" | \"right\";\n//   isPsychic: boolean;\n//   currPsychic: string;\n// };\n\nconst scoreStyle: CSSProperties = {\n  flex: \"1 1 300px\",\n  textAlign: \"center\",\n  color: \"white\",\n};\nconst Modals = {\n  NAME: \"name\",\n  NONE: \"\",\n};\n\nconst Room = (props: GameProps & { leftScore: number; rightScore: number }) => {\n  const history = useHistory();\n\n  const roomName = props.roomName;\n  let { leftScore, rightScore } = props;\n  const renderNames = (names: string[]) => {\n    return (\n      <ul style={{ listStyleType: \"none\", padding: 0 }}>\n        {names.map((name) => (\n          <li style={{ fontWeight: \"bold\" }}>{name}</li>\n        ))}\n      </ul>\n    );\n  };\n\n  const { leftTeam, rightTeam } = props;\n  const guessing = props.currTeam === (props.leftTurn ? \"left\" : \"right\");\n\n  const renderPlayArea = () => {\n    if (props.end) return <EndPlayArea {...props} />;\n    if (props.isPsychic) return <PsychicPlayArea {...props} />;\n    if (guessing) return <GuesserPlayArea {...props} />;\n    else return <StealerPlayArea {...props} />;\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: \"100vh\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <h1\n        style={{\n          textAlign: \"center\",\n          color: \"#000\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        WAVELENGTH\n      </h1>\n      {/* <h1 style={{ textAlign: \"center\" }}>Room Name: {roomName}</h1> */}\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"1 1 40%\",\n            textAlign: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <h2>Team 1</h2>\n          {renderNames(leftTeam)}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            placeItems: \"center\",\n            justifyContent: \"center\",\n            flex: \"0 1 10%\",\n          }}\n        >\n          <h1\n            style={{\n              textAlign: \"center\",\n            }}\n          >\n            VS\n          </h1>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"1 1 40%\",\n            textAlign: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <h2>Team 2</h2>\n          {renderNames(rightTeam)}\n        </div>\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <h1 style={{ backgroundColor: \"#FFA97E\", ...scoreStyle }}>\n            {leftScore}\n          </h1>\n          <h1 style={{ backgroundColor: \"#7ED6FF\", ...scoreStyle }}>\n            {rightScore}\n          </h1>\n        </div>\n      </div>\n\n      {renderPlayArea()}\n    </div>\n  );\n};\n\nexport default Room;\n","import { WinState } from \"./RoomHandler\";\nimport React, { CSSProperties, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RoomData from \"../types/RoomData\";\nimport socket from \"./Socket\";\nimport bg from \"../assets/wavelength.gif\";\n\ntype ScreenBaseProps = { winner: string; roomName: string };\n\nconst ScreenBase = (props: ScreenBaseProps) => {\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${bg})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        minHeight: \"100vh\",\n      }}\n    >\n      <h1\n        style={{\n          marginTop: 0,\n          paddingTop: 20,\n          textAlign: \"center\",\n          color: \"#fff\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        WAVELENGTH\n      </h1>\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"20px\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"1 1 40%\",\n            textAlign: \"center\",\n            flexDirection: \"column\",\n            // justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        ></div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flex: \"1 1 300px\",\n          alignItems: \"center\",\n          justifyContent: \"space-evenly\",\n          flexDirection: \"column\",\n        }}\n      >\n        {props.winner !== \"tie\" && (\n          <h1 style={{ color: \"white\" }}>\n            {props.winner === \"left\" ? \"Orange\" : \"Blue\"} Wins!\n          </h1>\n        )}\n        {props.winner === \"tie\" && (\n          <h1 style={{ color: \"white\" }}>It's a Tie!</h1>\n        )}\n\n        <button\n          style={{ backgroundColor: \"#7effa9\", marginTop: \"20px\" }}\n          onClick={() => {\n            socket.emit(\"restart\", props.roomName);\n          }}\n        >\n          Play Again\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ScreenBase;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport GameState from \"../types/GameState\";\nimport RoomData from \"../types/RoomData\";\nimport NotStarted from \"./NotStarted\";\nimport Room from \"./Room\";\nimport socket from \"./Socket\";\nimport \"../styles/Modals.css\";\nimport GameProps from \"../types/GameProps\";\nimport GuesserPlayArea from \"./GuesserPlayArea\";\nimport WinScreen from \"./WinScreen\";\ntype RoomHandlerProps = {\n  match: any;\n};\n\nexport type WinState = \"tie\" | \"left\" | \"right\" | \"neither\";\n\ntype Team = \"left\" | \"right\";\n\nconst RoomHandler = (props: RoomHandlerProps) => {\n  let [gameState, setGameState] = useState(GameState[\"TEAM1_END\"]);\n\n  const history = useHistory();\n  let [leftWord, setLeftWord] = useState(\"\");\n  let [rightWord, setRightWord] = useState(\"\");\n  let [leftTeam, setLeftTeam] = useState([] as string[]);\n  let [rightTeam, setRightTeam] = useState([] as string[]);\n  let [isPsychic, setIsPsychic] = useState(false);\n  let [currPsychic, setCurrPsychic] = useState(\"\");\n  let [leftTurn, setLeftTurn] = useState(true);\n  let [currTeam, setCurrTeam] = useState(\"\" as Team);\n  let [goal, setGoal] = useState(0);\n  let [name, setName] = useState(\"\");\n  let [opacity, setOpacity] = useState(1);\n  let [notJoined, setNotJoined] = useState(true);\n  let [userList, setUserList] = useState([] as string[]);\n  let [leftScore, setLeftScore] = useState(0);\n  let [rightScore, setRightScore] = useState(0);\n  let [steal, setSteal] = useState(false);\n  let [end, setEnd] = useState(false);\n  let [value, setValue] = useState(50);\n  let [winner, setWinner] = useState(\"neither\" as WinState);\n\n  const roomName = props.match.params.room;\n\n  const submit = (\n    e:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.FormEvent<HTMLInputElement>\n  ) => {\n    e.preventDefault();\n    if (!name) return;\n    setOpacity(0);\n    setTimeout(() => setNotJoined(false), 300);\n\n    const setData = (data: RoomData) => {\n      setLeftWord(data.leftWord);\n      setRightWord(data.rightWord);\n      setGoal(data.goal);\n      setGameState(data.gameState);\n      setUserList(data.userList);\n      setLeftTeam(data.leftTeam);\n      setCurrPsychic(data.currPsychic);\n      console.log(data);\n    };\n\n    socket.emit(\"joinroom\", roomName, name, (data: RoomData, team: Team) => {\n      setData(data);\n      setCurrTeam(team);\n    });\n  };\n\n  const handleTeamChange = () => {\n    socket.emit(\n      \"changetoteam\",\n      roomName,\n      currTeam === \"left\" ? \"right\" : \"left\",\n      name,\n      () => {\n        setCurrTeam(currTeam === \"left\" ? \"right\" : \"left\");\n      }\n    );\n  };\n\n  const startGame = (maxScore: number) => {\n    if (Number.isNaN(maxScore)) maxScore = 10;\n    else if (maxScore >= 40) maxScore = 40;\n    socket.emit(\"startgame\", roomName, maxScore);\n  };\n\n  useEffect(() => {\n    switch (gameState) {\n      case GameState[\"TEAM1_END\"]:\n      case GameState[\"TEAM2_END\"]:\n        setEnd(true);\n        setSteal(false);\n        break;\n      case GameState[\"TEAM1_GUESS\"]:\n      case GameState[\"TEAM2_GUESS\"]:\n        setEnd(false);\n        setSteal(false);\n        break;\n      case GameState[\"TEAM1_STEAL\"]:\n      case GameState[\"TEAM2_STEAL\"]:\n        setEnd(false);\n        setSteal(true);\n    }\n  }, [gameState]);\n\n  useEffect(() => {\n    const setData = (data: RoomData) => {\n      setLeftWord(data.leftWord);\n      setRightWord(data.rightWord);\n      setGoal(data.goal);\n    };\n    const setAllData = (data: RoomData) => {\n      setLeftWord(data.leftWord);\n      setRightWord(data.rightWord);\n      setGoal(data.goal);\n      setGameState(data.gameState);\n      setUserList(data.userList);\n      setLeftTeam(data.leftTeam);\n      setCurrPsychic(data.currPsychic);\n      console.log(data);\n    };\n    socket.on(\"restarted\", (data: RoomData) => {\n      setAllData(data);\n      setWinner(\"neither\");\n      console.log(data);\n    });\n\n    socket.on(\"winner\", (winner: WinState) => {\n      setWinner(winner);\n    });\n\n    socket.on(\"valuechanged\", (value: number) => {\n      setValue(value);\n    });\n\n    socket.on(\"generated\", (data: RoomData) => {\n      setData(data);\n    });\n\n    socket.on(\"updateuserlist\", (userList: string[]) => {\n      setUserList(userList);\n      console.log(userList);\n    });\n\n    socket.on(\"updateteams\", (leftTeam: string[], rightTeam: string[]) => {\n      setLeftTeam(leftTeam);\n      setRightTeam(rightTeam);\n      console.log(\"left: \" + leftTeam);\n      console.log(\"right: \" + rightTeam);\n    });\n\n    socket.on(\"setgamestate\", (gameState: GameState) => {\n      setGameState(gameState);\n    });\n\n    socket.on(\"youarepsychic\", () => {\n      setIsPsychic(true);\n    });\n\n    socket.on(\"psychicchosen\", (left: boolean, name: string) => {\n      setLeftTurn(left);\n      setCurrPsychic(name);\n    });\n\n    socket.on(\"updatescore\", (left: number, right: number) => {\n      setTimeout(() => {\n        setLeftScore(left);\n        setRightScore(right);\n      }, 500);\n    });\n\n    socket.on(\"updatestate\", (state: GameState) => {\n      setGameState(state);\n    });\n\n    socket.on(\"showingtarget\", () => {\n      setIsPsychic(false);\n    });\n  }, [roomName, setGoal]);\n\n  let renderVal;\n  let roomProps: GameProps = {\n    goal: goal,\n    leftWord: leftWord,\n    rightWord: rightWord,\n    isPsychic: isPsychic,\n    currPsychic: currPsychic,\n    currTeam: currTeam,\n    userList: userList,\n    rightTeam: rightTeam,\n    leftTeam: leftTeam,\n    roomName: roomName,\n    leftTurn: leftTurn,\n    steal: steal,\n    end: end,\n    value: value,\n  };\n\n  let data: RoomData = {\n    ...roomProps,\n    gameState: gameState,\n  };\n\n  if (winner !== \"neither\")\n    return <WinScreen winner={winner} roomName={roomName} />;\n\n  switch (gameState) {\n    case GameState[\"NOT_STARTED\"]:\n      renderVal = (\n        <NotStarted\n          roomName={roomName}\n          data={data}\n          currTeam={currTeam}\n          handleTeamChange={handleTeamChange}\n          start={startGame}\n        />\n      );\n      break;\n    default:\n      renderVal = (\n        <Room leftScore={leftScore} rightScore={rightScore} {...roomProps} />\n      );\n      break;\n  }\n\n  return (\n    <div>\n      {/* Modal */}\n      {notJoined ? (\n        <div className=\"backdrop\" style={{ opacity: opacity }}>\n          <form className=\"form\">\n            <h1 style={{ borderBottom: \"1px solid #c4c4c4\" }}>\n              What's Your Name?{\" \"}\n            </h1>\n            <input\n              style={{ fontFamily: \"Catamaran\", margin: \"20px\" }}\n              placeholder=\"Name\"\n              onSubmit={submit}\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            <button style={{ backgroundColor: \"#7effa9\" }} onClick={submit}>\n              Submit\n            </button>\n          </form>\n        </div>\n      ) : (\n        renderVal\n      )}\n    </div>\n  );\n};\n\nexport default RoomHandler;\n","import React from \"react\";\nimport Home from \"./components/Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Room from \"./components/Room\";\nimport Error from \"./components/Error\";\nimport RoomHandler from \"./components/RoomHandler\";\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/error\" component={Error} />\n        <Route path=\"/:room\" component={RoomHandler} />\n        <Route component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}