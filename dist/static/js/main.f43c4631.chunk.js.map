{"version":3,"sources":["types/GameState.ts","assets/wavelength.gif","components/Home.tsx","components/Error.tsx","components/NotStarted.tsx","assets/target.svg","components/EndSlider.tsx","utils/toTitleCase.ts","components/PolarCards.tsx","components/Socket.ts","components/EndPlayArea.tsx","components/Target.tsx","components/PsychicPlayArea.tsx","components/Slider.tsx","components/GuesserPlayArea.tsx","components/StealerPlayArea.tsx","components/Room.tsx","components/WinScreen.tsx","components/RoomHandler.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GameState","Home","useState","value","setValue","history","useHistory","style","backgroundImage","bg","backgroundSize","backgroundPosition","minHeight","marginTop","paddingTop","textAlign","color","display","flexDirection","justifyContent","margin","flex","alignItems","placeholder","type","name","onChange","e","target","htmlFor","onClick","push","Error","props","buttonStyle","width","NotStarted","roomName","data","renderNames","names","listStyleType","padding","map","fontWeight","disabled","currTeam","backgroundColor","handleTeamChange","leftTeam","placeItems","rightTeam","min","max","valueAsNumber","marginBottom","Number","isNaN","start","EndSlider","overflow","position","WebkitAppearance","height","background","borderRadius","outline","opacity","transition","backgroundRepeat","transform","goal","border","className","step","bottom","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","PolarCards","wordContainerStyle","fontFamily","wordStyle","minWidth","boxShadow","leftWord","fontSize","borderLeft","rightWord","socket","io","transports","EndPlayArea","setBg","showNext","setShowNext","setDisabled","useEffect","on","setTimeout","currPsychic","console","log","emit","Target","zIndex","PsychicPlayArea","Slider","handleChange","preventDefault","role","steal","parseFloat","_","debounce","GuesserPlayArea","StealerPlayArea","handleSteal","direction","marginRight","marginLeft","scoreStyle","Room","leftScore","rightScore","guessing","leftTurn","end","isPsychic","ScreenBase","winner","RoomHandler","renderVal","gameState","setGameState","setLeftWord","setRightWord","setLeftTeam","setRightTeam","setIsPsychic","setCurrPsychic","setLeftTurn","setCurrTeam","setGoal","setName","setOpacity","notJoined","setNotJoined","userList","setUserList","setLeftScore","setRightScore","setSteal","setEnd","setWinner","match","params","room","submit","team","setData","setAllData","left","right","state","roomProps","WinScreen","maxScore","borderBottom","onSubmit","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f43c4631.chunk.js","sourcesContent":["enum GameState {\n  \"NOT_STARTED\" = 0, //choose teams, people are joining, naming themselves, etc.\n  \"TEAM1_GUESS\" = 1, //somebody presses the start button, first psychic gives word. team 1 is given a button that says submit\n  \"TEAM1_STEAL\" = 2, //team 1 pressed submit, team 2 gets left or right buttons\n  \"TEAM1_END\" = 3, //team 2 pressed left. Show the lobby where the target was. Grant points to teams\n  \"TEAM2_GUESS\" = 4, //team 2 psychic gets to go. team 2 is shown submit button and can guess\n  \"TEAM2_STEAL\" = 5, //team 2 has guessed, team 1 gets left/right buttons\n  \"TEAM2_END\" = 6, //team 1 has pressed left/right. Show lobby the target. Go to team1guess\n  \"GAME_OVER\" = 7, //a team has scored enough to win. Show all targets and guesses? on submit -> go to not started\n}\n\nexport default GameState;\n","export default __webpack_public_path__ + \"static/media/wavelength.f97aa54d.gif\";","import { WinState } from \"./RoomHandler\";\nimport React, { CSSProperties, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RoomData from \"../types/RoomData\";\nimport socket from \"./Socket\";\nimport bg from \"../assets/wavelength.gif\";\n\nconst Home = () => {\n  let [value, setValue] = useState(\"\");\n  let history = useHistory();\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${bg})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        minHeight: \"100vh\",\n      }}\n    >\n      <h1\n        style={{\n          marginTop: 0,\n          paddingTop: 20,\n          textAlign: \"center\",\n          color: \"#fff\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        WAVELENGTH\n      </h1>\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"20px\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"1 1 40%\",\n            textAlign: \"center\",\n            flexDirection: \"column\",\n            // justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <input\n            placeholder=\"Room Name\"\n            type=\"text\"\n            name=\"roomname\"\n            style={{ textAlign: \"center\" }}\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n          <label htmlFor=\"roomname\" style={{ margin: 20, color: \"white\" }}>\n            Create or Join a Room\n          </label>\n          <button onClick={() => history.push(`/${value}`)}> Start </button>\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flex: \"1 1 300px\",\n          alignItems: \"center\",\n          justifyContent: \"space-evenly\",\n          flexDirection: \"column\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\ntype ErrorProps = {};\n\nconst Error = (props: ErrorProps) => {\n  return <div>Error! Something went wrong!</div>;\n};\n\nexport default Error;\n","import React, { CSSProperties, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RoomData from \"../types/RoomData\";\nimport socket from \"./Socket\";\nimport bg from \"../assets/wavelength.gif\";\ntype NotStartedProps = {\n  roomName: string;\n  name?: string;\n  data: RoomData;\n  currTeam: \"left\" | \"right\";\n  handleTeamChange?: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  start: (value: number) => void;\n};\n\nconst Modals = {\n  NAME: \"name\",\n  NONE: \"\",\n};\nconst buttonStyle: CSSProperties = {\n  width: \"75%\",\n};\n\nconst NotStarted = (props: NotStartedProps) => {\n  const history = useHistory();\n  const roomName = props.roomName;\n  const data = props.data;\n  let [value, setValue] = useState(10);\n\n  const renderNames = (names: string[]) => {\n    return (\n      <ul style={{ listStyleType: \"none\", padding: 0 }}>\n        {names.map((name) => (\n          <li style={{ fontWeight: \"bold\", color: \"white\" }}>{name}</li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${bg})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        minHeight: \"100vh\",\n      }}\n    >\n      {/* <button>Start the Game</button> */}\n      <h1\n        style={{\n          marginTop: 0,\n          paddingTop: 20,\n          textAlign: \"center\",\n          color: \"#000\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        WAVELENGTH\n      </h1>\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"20px\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"1 1 40%\",\n            textAlign: \"center\",\n            flexDirection: \"column\",\n            // justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <button\n            disabled={props.currTeam !== \"right\"}\n            style={{ ...buttonStyle, backgroundColor: \"#FFA97E\" }}\n            onClick={props.handleTeamChange}\n          >\n            Join\n          </button>\n          <h2 style={{ color: \"#FFA97E\" }}>Team 1</h2>\n          {renderNames(data.leftTeam)}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            placeItems: \"center\",\n            justifyContent: \"center\",\n            flex: \"0 1 10%\",\n          }}\n        >\n          <h1\n            style={{\n              textAlign: \"center\",\n            }}\n          >\n            VS\n          </h1>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"1 1 40%\",\n            textAlign: \"center\",\n            flexDirection: \"column\",\n            // justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <button\n            disabled={props.currTeam !== \"left\"}\n            style={{ ...buttonStyle, backgroundColor: \"#7ED6FF\" }}\n            onClick={props.handleTeamChange}\n          >\n            Join\n          </button>\n          <h2 style={{ color: \"#7ED6FF\" }}>Team 2</h2>\n          {renderNames(data.rightTeam)}\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flex: \"1 1 300px\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <input\n          name=\"maxscore\"\n          type=\"number\"\n          min=\"1\"\n          max=\"40\"\n          value={value}\n          onChange={(e) => setValue(e.target.valueAsNumber)}\n          style={{\n            margin: 20,\n            marginBottom: 5,\n          }}\n        />\n        <label htmlFor=\"name\" style={{ color: \"white\", marginBottom: \"10px\" }}>\n          First Team to {Number.isNaN(value) ? 10 : value >= 40 ? 40 : value}{\" \"}\n          wins\n        </label>\n\n        <button\n          onClick={() => props.start(value)}\n          style={{\n            backgroundColor: \"#7effa9\",\n          }}\n        >\n          start\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotStarted;\n","export default __webpack_public_path__ + \"static/media/target.619f13dd.svg\";","import React from \"react\";\nimport target from \"../assets/target.svg\";\nimport \"../styles/Spinner.css\";\ntype TargetProps = { goal: number; value: number; bg: number };\n\nconst EndSlider = (props: TargetProps) => {\n  return (\n    <div\n      style={{\n        overflow: \"hidden\",\n        position: \"relative\",\n        WebkitAppearance: \"none\",\n        width: \"calc(100% - 10px)\",\n        height: \"152px\",\n        background: \"#f5f6fa\",\n        borderRadius: \"5px\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n        outline: \"none\",\n      }}\n    >\n      <div\n        style={{\n          backgroundImage: `url(${target})`,\n          opacity: props.bg,\n          transition: \"opacity 1s\",\n          height: \"100%\",\n          backgroundSize: \"100%\",\n          backgroundRepeat: \"repeat-y\",\n          transform: `translateX(${props.goal - 50}vw)`,\n          border: \"none\",\n        }}\n      ></div>\n      <input\n        className=\"slider\"\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step={0.00001}\n        value={props.value}\n        style={{\n          position: \"absolute\",\n          bottom: 0,\n          border: \"1px solid black\",\n          margin: 0,\n          backgroundColor: \"rgba(255,255,255,0)\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default EndSlider;\n","export default function toTitleCase(str: string) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n","import React, { CSSProperties } from \"react\";\nimport toTitleCase from \"../utils/toTitleCase\";\ntype PolarCardsProps = {\n  leftWord: string;\n  rightWord: string;\n};\n\nconst PolarCards = (props: PolarCardsProps) => {\n  const wordContainerStyle: CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: \"1 1 50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontFamily: \"Catamaran\",\n  };\n  const wordStyle: CSSProperties = {\n    textAlign: \"center\",\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        minWidth: \"300px\",\n        minHeight: \"200px\",\n        width: \"60%\",\n        margin: \"20px\",\n        // border: \"1px solid black\",\n        borderRadius: \"5px\",\n        boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n        color: \"#fff\",\n      }}\n    >\n      <div\n        style={{\n          ...wordContainerStyle,\n          backgroundColor: \"#7ed6ff\",\n          borderRadius: \"5px 0px 0px 5px\",\n        }}\n      >\n        <h2 style={wordStyle}>{toTitleCase(props.leftWord)}</h2>\n        <h3 style={{ fontSize: \"3em\", margin: 0 }}>←</h3>\n      </div>\n\n      <div\n        style={{\n          ...wordContainerStyle,\n          backgroundColor: \"#ffa97e\",\n          borderLeft: \"1px solid black\",\n          borderRadius: \"0px 5px 5px 0px\",\n        }}\n      >\n        <h2 style={wordStyle}>{toTitleCase(props.rightWord)}</h2>\n        <h3 style={{ fontSize: \"3em\", margin: 0 }}>→</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default PolarCards;\n","import io from \"socket.io-client\";\n\nlet socket = io(\"http://localhost:4000\", { transports: [\"websocket\"] });\n\nexport default socket;\n","import React, { useEffect, useState } from \"react\";\nimport GameProps from \"../types/GameProps\";\nimport EndSlider from \"./EndSlider\";\nimport PolarCards from \"./PolarCards\";\nimport socket from \"./Socket\";\n\nconst EndPlayArea = (props: GameProps) => {\n  const { goal, leftWord, rightWord, value } = props;\n  let [bg, setBg] = useState(0);\n  let [showNext, setShowNext] = useState(false);\n  let [disabled, setDisabled] = useState(true);\n\n  useEffect(() => {\n    socket.on(\"showingtarget\", () => {\n      setBg(1);\n      setShowNext(true);\n      setTimeout(() => {\n        setDisabled(false);\n      }, 1200);\n    });\n  }, []);\n\n  const handleContinue = () => {\n    console.log(\"continue\");\n    socket.emit(\"continue\", props.roomName);\n  };\n  const handleShow = () => {\n    socket.emit(\"show\", props.roomName);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <h2 style={{ margin: 0 }}>{props.currPsychic} is up!</h2>\n      <PolarCards leftWord={leftWord} rightWord={rightWord} />\n      <EndSlider value={value} goal={goal} bg={bg} />\n      {showNext ? (\n        <button\n          style={{ backgroundColor: \"#7effa9\", color: \"#000\", width: \"40%\" }}\n          onClick={() => handleContinue()}\n          disabled={disabled}\n        >\n          Continue\n        </button>\n      ) : (\n        <button\n          style={{ backgroundColor: \"#7effa9\", color: \"#000\", width: \"40%\" }}\n          onClick={() => handleShow()}\n        >\n          Show\n        </button>\n      )}\n      {showNext && disabled && <div className=\"lds-dual-ring\" />}\n    </div>\n  );\n};\n\nexport default EndPlayArea;\n","import React from \"react\";\nimport target from \"../assets/target.svg\";\ntype TargetProps = { goal: number; value: number };\n\nconst Target = (props: TargetProps) => {\n  return (\n    <div\n      // className=\"slider\"\n      style={{\n        overflow: \"hidden\",\n        position: \"relative\",\n        WebkitAppearance: \"none\",\n        width: \"calc(100% - 10px)\",\n        height: \"154px\",\n        background: \"#f5f6fa\",\n        borderRadius: \"5px\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n        // border: \"1px solid grey\",\n        // boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n        outline: \"none\",\n      }}\n    >\n      <div\n        style={{\n          backgroundImage: `url(${target})`,\n          height: \"100%\",\n          backgroundSize: \"100%\",\n          backgroundRepeat: \"repeat-y\",\n          transform: `translateX(${props.goal - 50}vw)`,\n          border: \"none\",\n        }}\n      ></div>\n      <input\n        className=\"slider\"\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step={0.00001}\n        value={props.value}\n        style={{\n          zIndex: 99999,\n          position: \"absolute\",\n          bottom: 0,\n          backgroundColor: \"rgba(255,255,255,0)\",\n        }}\n      />\n      {/* <div\n        style={{\n          width: \"5px\",\n          borderRadius: \"3px\",\n          height: \"100%\",\n          backgroundColor: \"red\",\n          // backgroundRepeat: \"repeat-y\",\n          transform: `translateX(${props.value - 27}vw)`,\n          zIndex: 999999,\n          position: \"absolute\",\n          bottom: 0,\n        }}\n      ></div> */}\n    </div>\n  );\n};\n\nexport default Target;\n","import React, { useEffect, useState } from \"react\";\nimport GameProps from \"../types/GameProps\";\nimport PolarCards from \"./PolarCards\";\nimport Target from \"./Target\";\n\nconst PsychicPlayArea = (props: GameProps) => {\n  const { goal, leftWord, rightWord, value } = props;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <h2 style={{ margin: 0 }}>{props.currPsychic} is up!</h2>\n      <PolarCards leftWord={leftWord} rightWord={rightWord} />\n      <p style={{ margin: 0 }}>\n        You're the <strong>PSYCHIC</strong>\n      </p>\n      <Target goal={goal} value={value} />\n    </div>\n  );\n};\n\nexport default PsychicPlayArea;\n","import React, { useEffect, useState } from \"react\";\nimport \"../styles/Slider.css\";\nimport target from \"../assets/target.svg\";\nimport socket from \"./Socket\";\nimport _ from \"lodash\";\ntype SliderProps = {\n  role: \"stealer\" | \"guesser\";\n  roomName: string;\n  value: number;\n  steal: boolean;\n};\n\nconst Slider = (props: SliderProps) => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    if (props.role === \"stealer\" || props.steal) return;\n    if (props.role === \"guesser\") {\n      socket.emit(\n        \"changevalue\",\n        props.roomName,\n        Number.parseFloat(e.target.value)\n      );\n    }\n    console.log(\"change\");\n  };\n\n  const [throttledCall] = useState(() =>\n    _.debounce((e) => handleChange(e), 10)\n  );\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        margin: \"20px\",\n      }}\n    >\n      <input\n        className=\"slider\"\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step={0.00001}\n        value={props.value}\n        onChange={(e) => handleChange(e)}\n      />\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useEffect, useState } from \"react\";\nimport GameProps from \"../types/GameProps\";\nimport PolarCards from \"./PolarCards\";\nimport Slider from \"./Slider\";\nimport socket from \"./Socket\";\n\nconst GuesserPlayArea = (props: GameProps) => {\n  const { goal, leftWord, rightWord, value } = props;\n\n  const handleGuess = () => {\n    socket.emit(\"guess\", props.roomName, value);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <h2 style={{ margin: 0 }}>{props.currPsychic} is up!</h2>\n      <PolarCards leftWord={leftWord} rightWord={rightWord} />\n      <p style={{ margin: 0 }}>\n        It's your team's turn to <strong>GUESS</strong>\n      </p>\n      <Slider\n        roomName={props.roomName}\n        role=\"guesser\"\n        value={value}\n        steal={props.steal}\n      />\n      <button\n        style={{ backgroundColor: \"#7effa9\", color: \"#000\", width: \"40%\" }}\n        disabled={props.steal}\n        onClick={handleGuess}\n      >\n        Guess\n      </button>\n    </div>\n  );\n};\n\nexport default GuesserPlayArea;\n","import React, { useEffect, useState } from \"react\";\nimport GameProps from \"../types/GameProps\";\nimport PolarCards from \"./PolarCards\";\nimport Slider from \"./Slider\";\nimport socket from \"./Socket\";\n\nconst StealerPlayArea = (props: GameProps) => {\n  const { goal, leftWord, rightWord, value } = props;\n\n  const handleSteal = (direction: \"left\" | \"right\") => {\n    socket.emit(\"steal\", props.roomName, direction, value);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <h2 style={{ margin: 0 }}>{props.currPsychic} is up!</h2>\n      <PolarCards leftWord={leftWord} rightWord={rightWord} />\n      <p style={{ margin: 0 }}>\n        It's your team's turn to <strong>STEAL</strong>\n      </p>\n      <Slider\n        steal={props.steal}\n        value={value}\n        roomName={props.roomName}\n        role=\"stealer\"\n      />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-evenly\",\n        }}\n      >\n        <button\n          style={{\n            backgroundColor: \"#7ED6FF\",\n            color: \"#fff\",\n            width: \"auto\",\n            marginRight: \"5px\",\n          }}\n          disabled={!props.steal}\n          onClick={() => handleSteal(\"left\")}\n        >\n          Left\n        </button>\n        <button\n          style={{\n            backgroundColor: \"#FFA97E\",\n            color: \"#fff\",\n            width: \"auto\",\n            marginLeft: \"5px\",\n          }}\n          disabled={!props.steal}\n          onClick={() => handleSteal(\"right\")}\n        >\n          Right\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default StealerPlayArea;\n","import React, { CSSProperties, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RoomData from \"../types/RoomData\";\nimport toTitleCase from \"../utils/toTitleCase\";\nimport EndPlayArea from \"./EndPlayArea\";\nimport PolarCards from \"./PolarCards\";\nimport socket from \"./Socket\";\nimport \"../styles/Modals.css\";\nimport GameProps from \"../types/GameProps\";\nimport PsychicPlayArea from \"./PsychicPlayArea\";\nimport GuesserPlayArea from \"./GuesserPlayArea\";\nimport StealerPlayArea from \"./StealerPlayArea\";\nimport wavelength from \"../assets/wavelength.jpg\";\nimport wavegif from \"../assets/wavelength.gif\";\n\n// type RoomProps = {\n//   roomName: string;\n//   data: RoomData;\n//   currTeam: \"left\" | \"right\";\n//   isPsychic: boolean;\n//   currPsychic: string;\n// };\n\nconst scoreStyle: CSSProperties = {\n  flex: \"1 1 300px\",\n  textAlign: \"center\",\n  color: \"white\",\n};\nconst Modals = {\n  NAME: \"name\",\n  NONE: \"\",\n};\n\nconst Room = (props: GameProps & { leftScore: number; rightScore: number }) => {\n  const history = useHistory();\n\n  const roomName = props.roomName;\n  let { leftScore, rightScore } = props;\n  const renderNames = (names: string[]) => {\n    return (\n      <ul style={{ listStyleType: \"none\", padding: 0 }}>\n        {names.map((name) => (\n          <li style={{ fontWeight: \"bold\" }}>{name}</li>\n        ))}\n      </ul>\n    );\n  };\n\n  const { leftTeam, rightTeam } = props;\n  const guessing = props.currTeam === (props.leftTurn ? \"left\" : \"right\");\n\n  const renderPlayArea = () => {\n    if (props.end) return <EndPlayArea {...props} />;\n    if (props.isPsychic) return <PsychicPlayArea {...props} />;\n    if (guessing) return <GuesserPlayArea {...props} />;\n    else return <StealerPlayArea {...props} />;\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        minHeight: \"100vh\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <h1\n        style={{\n          textAlign: \"center\",\n          color: \"#000\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        WAVELENGTH\n      </h1>\n      {/* <h1 style={{ textAlign: \"center\" }}>Room Name: {roomName}</h1> */}\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"1 1 40%\",\n            textAlign: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <h2>Team 1</h2>\n          {renderNames(leftTeam)}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            placeItems: \"center\",\n            justifyContent: \"center\",\n            flex: \"0 1 10%\",\n          }}\n        >\n          <h1\n            style={{\n              textAlign: \"center\",\n            }}\n          >\n            VS\n          </h1>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"1 1 40%\",\n            textAlign: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <h2>Team 2</h2>\n          {renderNames(rightTeam)}\n        </div>\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <h1 style={{ backgroundColor: \"#FFA97E\", ...scoreStyle }}>\n            {leftScore}\n          </h1>\n          <h1 style={{ backgroundColor: \"#7ED6FF\", ...scoreStyle }}>\n            {rightScore}\n          </h1>\n        </div>\n      </div>\n\n      {renderPlayArea()}\n    </div>\n  );\n};\n\nexport default Room;\n","import { WinState } from \"./RoomHandler\";\nimport React, { CSSProperties, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RoomData from \"../types/RoomData\";\nimport socket from \"./Socket\";\nimport bg from \"../assets/wavelength.gif\";\n\ntype ScreenBaseProps = { winner: string; roomName: string };\n\nconst ScreenBase = (props: ScreenBaseProps) => {\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${bg})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        minHeight: \"100vh\",\n      }}\n    >\n      <h1\n        style={{\n          marginTop: 0,\n          paddingTop: 20,\n          textAlign: \"center\",\n          color: \"#fff\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        WAVELENGTH\n      </h1>\n      <div style={{ display: \"flex\", flexDirection: \"row\", margin: \"20px\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"1 1 40%\",\n            textAlign: \"center\",\n            flexDirection: \"column\",\n            // justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        ></div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flex: \"1 1 300px\",\n          alignItems: \"center\",\n          justifyContent: \"space-evenly\",\n          flexDirection: \"column\",\n        }}\n      >\n        {props.winner !== \"tie\" && (\n          <h1 style={{ color: \"white\" }}>\n            {props.winner === \"left\" ? \"Orange\" : \"Blue\"} Wins!\n          </h1>\n        )}\n        {props.winner === \"tie\" && (\n          <h1 style={{ color: \"white\" }}>It's a Tie!</h1>\n        )}\n\n        <button\n          style={{ backgroundColor: \"#7effa9\", marginTop: \"20px\" }}\n          onClick={() => {\n            socket.emit(\"restart\", props.roomName);\n          }}\n        >\n          Play Again\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ScreenBase;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport GameState from \"../types/GameState\";\nimport RoomData from \"../types/RoomData\";\nimport NotStarted from \"./NotStarted\";\nimport Room from \"./Room\";\nimport socket from \"./Socket\";\nimport \"../styles/Modals.css\";\nimport GameProps from \"../types/GameProps\";\nimport GuesserPlayArea from \"./GuesserPlayArea\";\nimport WinScreen from \"./WinScreen\";\ntype RoomHandlerProps = {\n  match: any;\n};\n\nexport type WinState = \"tie\" | \"left\" | \"right\" | \"neither\";\n\ntype Team = \"left\" | \"right\";\n\nconst RoomHandler = (props: RoomHandlerProps) => {\n  let [gameState, setGameState] = useState(GameState[\"TEAM1_END\"]);\n\n  const history = useHistory();\n  let [leftWord, setLeftWord] = useState(\"\");\n  let [rightWord, setRightWord] = useState(\"\");\n  let [leftTeam, setLeftTeam] = useState([] as string[]);\n  let [rightTeam, setRightTeam] = useState([] as string[]);\n  let [isPsychic, setIsPsychic] = useState(false);\n  let [currPsychic, setCurrPsychic] = useState(\"\");\n  let [leftTurn, setLeftTurn] = useState(true);\n  let [currTeam, setCurrTeam] = useState(\"\" as Team);\n  let [goal, setGoal] = useState(0);\n  let [name, setName] = useState(\"\");\n  let [opacity, setOpacity] = useState(1);\n  let [notJoined, setNotJoined] = useState(true);\n  let [userList, setUserList] = useState([] as string[]);\n  let [leftScore, setLeftScore] = useState(0);\n  let [rightScore, setRightScore] = useState(0);\n  let [steal, setSteal] = useState(false);\n  let [end, setEnd] = useState(false);\n  let [value, setValue] = useState(50);\n  let [winner, setWinner] = useState(\"neither\" as WinState);\n\n  const roomName = props.match.params.room.toLowerCase();\n\n  const submit = (\n    e:\n      | React.MouseEvent<HTMLButtonElement, MouseEvent>\n      | React.FormEvent<HTMLInputElement>\n  ) => {\n    e.preventDefault();\n    if (!name) return;\n    setOpacity(0);\n    setTimeout(() => setNotJoined(false), 300);\n\n    const setData = (data: RoomData) => {\n      setLeftWord(data.leftWord);\n      setRightWord(data.rightWord);\n      setGoal(data.goal);\n      setGameState(data.gameState);\n      setUserList(data.userList);\n      setLeftTeam(data.leftTeam);\n      setCurrPsychic(data.currPsychic);\n      console.log(data);\n    };\n\n    socket.emit(\"joinroom\", roomName, name, (data: RoomData, team: Team) => {\n      setData(data);\n      setCurrTeam(team);\n    });\n  };\n\n  const handleTeamChange = () => {\n    socket.emit(\n      \"changetoteam\",\n      roomName,\n      currTeam === \"left\" ? \"right\" : \"left\",\n      name,\n      () => {\n        setCurrTeam(currTeam === \"left\" ? \"right\" : \"left\");\n      }\n    );\n  };\n\n  const startGame = (maxScore: number) => {\n    if (Number.isNaN(maxScore)) maxScore = 10;\n    else if (maxScore >= 40) maxScore = 40;\n    socket.emit(\"startgame\", roomName, maxScore);\n  };\n\n  useEffect(() => {\n    switch (gameState) {\n      case GameState[\"TEAM1_END\"]:\n      case GameState[\"TEAM2_END\"]:\n        setEnd(true);\n        setSteal(false);\n        break;\n      case GameState[\"TEAM1_GUESS\"]:\n      case GameState[\"TEAM2_GUESS\"]:\n        setEnd(false);\n        setSteal(false);\n        break;\n      case GameState[\"TEAM1_STEAL\"]:\n      case GameState[\"TEAM2_STEAL\"]:\n        setEnd(false);\n        setSteal(true);\n    }\n  }, [gameState]);\n\n  useEffect(() => {\n    const setData = (data: RoomData) => {\n      setLeftWord(data.leftWord);\n      setRightWord(data.rightWord);\n      setGoal(data.goal);\n    };\n    const setAllData = (data: RoomData) => {\n      setLeftWord(data.leftWord);\n      setRightWord(data.rightWord);\n      setGoal(data.goal);\n      setGameState(data.gameState);\n      setUserList(data.userList);\n      setLeftTeam(data.leftTeam);\n      setCurrPsychic(data.currPsychic);\n      console.log(data);\n    };\n    socket.on(\"restarted\", (data: RoomData) => {\n      setAllData(data);\n      setWinner(\"neither\");\n      console.log(data);\n    });\n\n    socket.on(\"winner\", (winner: WinState) => {\n      setWinner(winner);\n    });\n\n    socket.on(\"valuechanged\", (value: number) => {\n      setValue(value);\n    });\n\n    socket.on(\"generated\", (data: RoomData) => {\n      setData(data);\n    });\n\n    socket.on(\"updateuserlist\", (userList: string[]) => {\n      setUserList(userList);\n      console.log(userList);\n    });\n\n    socket.on(\"updateteams\", (leftTeam: string[], rightTeam: string[]) => {\n      setLeftTeam(leftTeam);\n      setRightTeam(rightTeam);\n      console.log(\"left: \" + leftTeam);\n      console.log(\"right: \" + rightTeam);\n    });\n\n    socket.on(\"setgamestate\", (gameState: GameState) => {\n      setGameState(gameState);\n    });\n\n    socket.on(\"youarepsychic\", () => {\n      setIsPsychic(true);\n    });\n\n    socket.on(\"psychicchosen\", (left: boolean, name: string) => {\n      setLeftTurn(left);\n      setCurrPsychic(name);\n    });\n\n    socket.on(\"updatescore\", (left: number, right: number) => {\n      setTimeout(() => {\n        setLeftScore(left);\n        setRightScore(right);\n      }, 500);\n    });\n\n    socket.on(\"updatestate\", (state: GameState) => {\n      setGameState(state);\n    });\n\n    socket.on(\"showingtarget\", () => {\n      setIsPsychic(false);\n    });\n  }, [roomName, setGoal]);\n\n  let renderVal;\n  let roomProps: GameProps = {\n    goal: goal,\n    leftWord: leftWord,\n    rightWord: rightWord,\n    isPsychic: isPsychic,\n    currPsychic: currPsychic,\n    currTeam: currTeam,\n    userList: userList,\n    rightTeam: rightTeam,\n    leftTeam: leftTeam,\n    roomName: roomName,\n    leftTurn: leftTurn,\n    steal: steal,\n    end: end,\n    value: value,\n  };\n\n  let data: RoomData = {\n    ...roomProps,\n    gameState: gameState,\n  };\n\n  if (winner !== \"neither\")\n    return <WinScreen winner={winner} roomName={roomName} />;\n\n  switch (gameState) {\n    case GameState[\"NOT_STARTED\"]:\n      renderVal = (\n        <NotStarted\n          roomName={roomName}\n          data={data}\n          currTeam={currTeam}\n          handleTeamChange={handleTeamChange}\n          start={startGame}\n        />\n      );\n      break;\n    default:\n      renderVal = (\n        <Room leftScore={leftScore} rightScore={rightScore} {...roomProps} />\n      );\n      break;\n  }\n\n  return (\n    <div>\n      {/* Modal */}\n      {notJoined ? (\n        <div className=\"backdrop\" style={{ opacity: opacity }}>\n          <form className=\"form\">\n            <h1 style={{ borderBottom: \"1px solid #c4c4c4\" }}>\n              What's Your Name?{\" \"}\n            </h1>\n            <input\n              style={{ fontFamily: \"Catamaran\", margin: \"20px\" }}\n              placeholder=\"Name\"\n              onSubmit={submit}\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            <button style={{ backgroundColor: \"#7effa9\" }} onClick={submit}>\n              Submit\n            </button>\n          </form>\n        </div>\n      ) : (\n        renderVal\n      )}\n    </div>\n  );\n};\n\nexport default RoomHandler;\n","import React from \"react\";\nimport Home from \"./components/Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Room from \"./components/Room\";\nimport Error from \"./components/Error\";\nimport RoomHandler from \"./components/RoomHandler\";\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/error\" component={Error} />\n        <Route path=\"/:room\" component={RoomHandler} />\n        <Route component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}